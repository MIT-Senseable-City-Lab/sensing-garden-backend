{
  "openapi": "3.0.0",
  "info": {
    "title": "Sensing Garden API",
    "version": "0.0.1",
    "description": "API for plant detection and classification"
  },
  "paths": {
    "/models": {
      "get": {
        "summary": "Get a list of models",
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter models by device_id"
          },
          {
            "name": "model_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter by specific model_id"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Start time for filtering models (ISO-8601)"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "End time for filtering models (ISO-8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of models to return"
          },
          {
            "name": "next_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Token for pagination"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Attribute to sort by (e.g., 'timestamp', 'device_id')"
          },
          {
            "name": "sort_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, sort in descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of models"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Create a new model",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ModelData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Model created successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/detections": {
      "get": {
        "summary": "Get a list of detections",
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter detections by device_id"
          },
          {
            "name": "model_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter detections by model_id"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Start time for filtering detections (ISO-8601)"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "End time for filtering detections (ISO-8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of detections to return"
          },
          {
            "name": "next_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Token for pagination"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Attribute to sort by (e.g., 'timestamp', 'device_id')"
          },
          {
            "name": "sort_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, sort in descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of detections"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Submit a detection request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DetectionData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detection processed successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/classifications": {
      "get": {
        "summary": "Get a list of classifications",
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter classifications by device_id"
          },
          {
            "name": "model_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter classifications by model_id"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Start time for filtering classifications (ISO-8601)"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "End time for filtering classifications (ISO-8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of classifications to return"
          },
          {
            "name": "next_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Token for pagination"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Attribute to sort by (e.g., 'timestamp', 'device_id')"
          },
          {
            "name": "sort_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, sort in descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of classifications"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Submit a classification request",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClassificationData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Classification processed successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/videos": {
      "get": {
        "summary": "Get a list of videos",
        "parameters": [
          {
            "name": "device_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Filter videos by device_id"
          },
          {
            "name": "start_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Start time for filtering videos (ISO-8601)"
          },
          {
            "name": "end_time",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "End time for filtering videos (ISO-8601)"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            },
            "description": "Maximum number of videos to return"
          },
          {
            "name": "next_token",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Token for pagination"
          },
          {
            "name": "sort_by",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "description": "Attribute to sort by (e.g., 'timestamp', 'device_id')"
          },
          {
            "name": "sort_desc",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": false
            },
            "description": "If true, sort in descending order"
          }
        ],
        "responses": {
          "200": {
            "description": "List of videos"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Upload a video",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoData"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video uploaded successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/videos/multipart/initiate": {
      "post": {
        "summary": "Initiate a multipart video upload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipartInitiateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Multipart upload initiated successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/videos/multipart/upload": {
      "post": {
        "summary": "Upload a part of a multipart video upload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipartUploadRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Part uploaded successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/videos/multipart/complete": {
      "post": {
        "summary": "Complete a multipart video upload",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MultipartCompleteRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Multipart upload completed successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/videos/register": {
      "post": {
        "summary": "Register a video that was uploaded directly to S3",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/VideoRegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Video registered successfully"
          },
          "400": {
            "description": "Invalid request parameters"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DetectionData": {
        "type": "object",
        "required": [
          "device_id",
          "model_id",
          "image",
          "timestamp",
          "bounding_box"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "Unique identifier for the device"
          },
          "model_id": {
            "type": "string",
            "description": "Identifier for the model to use for detection"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO-8601 formatted timestamp"
          },
          "image": {
            "type": "string",
            "description": "Base64 encoded image data"
          },
          "bounding_box": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "description": "Bounding box coordinates for the detection"
          }
        }
      },
      "ModelData": {
        "type": "object",
        "required": [
          "model_id",
          "name",
          "description",
          "version"
        ],
        "properties": {
          "model_id": {
            "type": "string",
            "description": "Unique identifier for the model"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO-8601 formatted timestamp (optional, server will generate if not provided)"
          },
          "name": {
            "type": "string",
            "description": "Name of the model"
          },
          "description": {
            "type": "string",
            "description": "Description of the model"
          },
          "version": {
            "type": "string",
            "description": "Version of the model"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the model"
          }
        }
      },
      "ClassificationData": {
        "type": "object",
        "required": [
          "device_id",
          "model_id",
          "image",
          "family",
          "genus",
          "species",
          "family_confidence",
          "genus_confidence",
          "species_confidence"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "Unique identifier for the device"
          },
          "model_id": {
            "type": "string",
            "description": "Identifier for the model to use for classification"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO-8601 formatted timestamp (optional, server will generate if not provided)"
          },
          "image": {
            "type": "string",
            "description": "Base64 encoded image data"
          },
          "family": {
            "type": "string",
            "description": "Taxonomic family of the plant"
          },
          "genus": {
            "type": "string",
            "description": "Taxonomic genus of the plant"
          },
          "species": {
            "type": "string",
            "description": "Taxonomic species of the plant"
          },
          "family_confidence": {
            "type": "number",
            "description": "Confidence score for family classification (0-1)"
          },
          "genus_confidence": {
            "type": "number",
            "description": "Confidence score for genus classification (0-1)"
          },
          "species_confidence": {
            "type": "number",
            "description": "Confidence score for species classification (0-1)"
          }
        }
      },
      "VideoData": {
        "type": "object",
        "required": [
          "device_id",
          "video",
          "description"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "Unique identifier for the device"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO-8601 formatted timestamp (optional, server will generate if not provided)"
          },
          "video": {
            "type": "string",
            "description": "Base64 encoded video data"
          },
          "description": {
            "type": "string",
            "description": "Description of the video content"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the video"
          }
        }
      },
      "MultipartInitiateRequest": {
        "type": "object",
        "required": [
          "device_id",
          "description",
          "content_type",
          "total_parts",
          "total_size_bytes"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "Unique identifier for the device"
          },
          "description": {
            "type": "string",
            "description": "Description of the video content"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO-8601 formatted timestamp (optional, server will generate if not provided)"
          },
          "content_type": {
            "type": "string",
            "description": "MIME type of the video (e.g., 'video/mp4')"
          },
          "total_parts": {
            "type": "integer",
            "description": "Total number of parts in the multipart upload"
          },
          "total_size_bytes": {
            "type": "integer",
            "description": "Total size of the video in bytes"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the video"
          }
        }
      },
      "MultipartUploadRequest": {
        "type": "object",
        "required": [
          "upload_id",
          "part_number",
          "part_data"
        ],
        "properties": {
          "upload_id": {
            "type": "string",
            "description": "Unique identifier for the multipart upload"
          },
          "part_number": {
            "type": "integer",
            "description": "Part number (1-based index)"
          },
          "part_data": {
            "type": "string",
            "description": "Base64 encoded part data"
          }
        }
      },
      "MultipartCompleteRequest": {
        "type": "object",
        "required": [
          "upload_id"
        ],
        "properties": {
          "upload_id": {
            "type": "string",
            "description": "Unique identifier for the multipart upload"
          }
        }
      },
      "VideoRegistrationRequest": {
        "type": "object",
        "required": [
          "device_id",
          "description",
          "video_key"
        ],
        "properties": {
          "device_id": {
            "type": "string",
            "description": "Unique identifier for the device"
          },
          "description": {
            "type": "string",
            "description": "Description of the video content"
          },
          "video_key": {
            "type": "string",
            "description": "S3 key of the uploaded video"
          },
          "timestamp": {
            "type": "string",
            "description": "ISO-8601 formatted timestamp (optional, server will generate if not provided)"
          },
          "metadata": {
            "type": "object",
            "description": "Additional metadata about the video"
          }
        }
      }
    }
  }
}
